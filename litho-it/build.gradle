/*
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

import org.gradle.internal.jvm.Jvm

apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion

        javaCompileOptions {
            annotationProcessorOptions {
                // We transitively depend on auto-value which we don't want to
                // use as annotation processor at this time, so we can safely
                // disable this warning.
                includeCompileClasspath false
            }
        }
    }

    testOptions {
        unitTests.all {
            jvmArgs '-Dcom.facebook.litho.is_oss=true'
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    // For main targets
    implementation project(':litho-core')
    implementation project(':litho-widget')
    implementation project(':litho-sections-core')
    implementation deps.supportAppCompat

    compileOnly project(':litho-annotations')
    compileOnly project(':litho-sections-annotations')
    annotationProcessor project(':litho-sections-processor')

    // Test project dependencies
    testCompileOnly project(':litho-annotations')
    testCompileOnly project(':litho-sections-annotations')
    testImplementation project(':litho-testing')
    testImplementation project(':litho-widget')
    testImplementation project(':litho-processor')
    testImplementation project(':litho-sections-core')
    testImplementation project(':litho-sections-processor')
    testImplementation project(':litho-sections-widget')
    testImplementation project(':test-specs')

    // Testing deps
    testCompileOnly deps.jsr305
    testImplementation deps.assertjCore
    testImplementation deps.compileTesting
    testImplementation deps.junit
    testImplementation deps.mockitoCore
    testImplementation deps.javapoet
    testImplementation deps.robolectric
    testImplementation deps.soloader
    testImplementation deps.supportAppCompat
    testImplementation deps.supportCoreUi
    testImplementation deps.supportRecyclerView
    testImplementation deps.powermockReflect
    testImplementation deps.khronos
    testImplementation files(Jvm.current().getToolsJar())
}

tasks.withType(JavaCompile) {
    options.compilerArgs += [ '-Xep:GuardedBy:OFF', '-Xep:CheckReturnValue:OFF' ]
}

// Source - https://github.com/nenick/AndroidStudioAndRobolectric/blob/master/app/build.workaround-missing-resource.gradle
// Workaround for missing test resources when running unit tests within android studio.
// This copies the test resources next to the test classes for each variant.
// Tracked at https://github.com/nenick/AndroidStudioAndRobolectric/issues/7
// Original solution comes from https://code.google.com/p/android/issues/detail?id=136013#c10
// See also https://code.google.com/p/android/issues/detail?id=64887

gradle.projectsEvaluated {
  // Base path which is recognized by android studio.
  def testClassesPath = "${buildDir}/intermediates/classes/test/"
  // Copy must be done for each variant.
  def variants = android.libraryVariants.collect()

  variants.each { variant ->
    def variationName = variant.name.capitalize()
    def variationPath = variant.buildType.name

    // Specific copy task for each variant
    def copyTestResourcesTask = project.tasks.create("copyTest${variationName}Resources", Copy)
    copyTestResourcesTask.from("${projectDir}/src/test/resources")
    copyTestResourcesTask.into("${testClassesPath}/${variationPath}")
    copyTestResourcesTask.execute()
  }
}
